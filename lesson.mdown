# Классы

Класс - это некоторая сущность, которая позволяет описывать объекты из реального (и компьютергого) мира. Дерево, дом, кошка, цабака – это все объекты. Яблоня, Улица свободы дом 11, Пуша, Генри – это **конкретные вещи**, которые **относятся** к деревьям, домам итд.

У ката есть свойства: рост, вес, цвет и так далее. Кот умеет бегать, мяукать – это его функции. У Пуши рост 30 см, вес 10кг, цвет бело-черный. 

В мире программирования Кот – это класс, а пуша - экземпляр класса (что-то, что относится к классу, но имеет конкретные значения).

Исходя из этого, можно сказать, что класс – это некий шаблон описания свойств и функциональности. А экземпляр – заполненная копия этого шаблона.

## Синтаксис

```java
class Имя {
	// Код внутри класса
}
```

Что может быть внутри класса? Функции (дейстия, которые объект может выполнить) и переменные(параметры описываемого объекта), конечно же.

К примеру, если мы хотим описать кота, то для начала оперелимся: какие у него будут характеристики? Допустим: рост, вес и цвет. Приступим:

```java
class Cat {
    int height;
    int weight;
    String color;
}
```

а теперь добавим возможность нашему котику мяукать:

```java
class Cat {
    int height;
    int weight;
    String color;

    void say() {
        System.out.println("Мяу!");
    }
}

```

А теперь создадим экземпляр нашего класса в main(). Для этого мы используем ключевое `new`:

`Имя_класса имя_экземпляра = new Имя_класса();`

```java
public class Main {

    public static void main(String[] args) {
        Cat pusha = new Cat();
        pusha.say(); // Мяу!
    }
}

```

Тут важно понимать, что функцию `say()` мы вызываем не у класса `Cat`, а у его экземпляра `pusha`. В противном случае будет ошибка (преднамеренная):

```java
public class Main {

    public static void main(String[] args) {
        Cat pusha = new Cat();
        Cat.say(); // Ошибка!
    }
}

```

Заметим, что мы создали экземпляр, у которого по определению все поля (переменные внутри) не проинициализированны (не имеют значения). Изменить значение переменной можно через синтаксис: `имя_экземпляра.имя_пеерменной = значение;`

```java
public class Main {

    public static void main(String[] args) {
        Cat pusha = new Cat();
        pusha.say();

        int pushaHeigh = pusha.height; // Значение: 0

        pusha.height = 30;

        int newPushaHeight = pusha.height; // Значение: 30
    }
}
```

Закрепления понимания ради, создадим несколько экземпларов котов, скажем, тех, кто сейчас во дворе: Пуша, Вася и Аллах:

```java
public class Main {

    public static void main(String[] args) {
        Cat pusha = new Cat();
        Cat vasia = new Cat();
        Cat allah = new Cat();

        pusha.say(); // Мяу!
        vasia.say(); // Мяу!
        allah.say(); // Мяу!
    }
}

```